import numpy as np
import pytest

from asm1_influent_generator.asm1_generator import ASM1Generator


@pytest.fixture
def asm1_generator():
    return ASM1Generator()


def test_generate_default(asm1_generator):
    generated_data = asm1_generator.generate()
    assert isinstance(generated_data, np.ndarray)
    assert generated_data.shape[0] == 1  # Only one sample generated by default


def test_generate_multiple_samples(asm1_generator):
    n_samples = 5
    generated_data = asm1_generator.generate(n_samples)
    assert generated_data.shape[0] == n_samples


def test_generate_specific_components(asm1_generator):
    components = ['SI', 'SS', 'XI']
    generated_data = asm1_generator.generate(components=components)
    time_dim = 1  # Time dimension is always 1
    assert generated_data.shape[2] == len(components) + time_dim


def test_generate_invalid_component(asm1_generator):
    components = ['SI', 'SS', 'InvalidComponent']
    with pytest.raises(ValueError):
        asm1_generator.generate(components=components)
